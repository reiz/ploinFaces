package org.ploin.web.validator;

import mock.FacesContextMock;
import org.ploin.web.faces.validator.EmailValidator;
import static org.testng.Assert.assertFalse;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import javax.faces.component.UIComponent;
import javax.faces.component.html.HtmlInputText;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;

/**
 * <code><pre>
 *                                    ........
 *                                 .WHHUUVOOOOU&,
 *     dMMMMMMMMMMMa,   .MMMMF   .MHW0Oz+!``````?G.   .MMMM% .MMMMMMMMMMMN,
 *    .MMMMMMMMMMMMMMr  JMMMM   JHHXwOz;:^..```  `O,  JMMM#  dMMMMMMMMMMMMN
 *    JMMM#     ,MMMMF  MMMMF  .MHVXwOz++.^.````  +n .MMMM$ .MMMMt    dMMM#
 *   .MMMMt     .MMMMt .MMMM!  JMHWWXwOz++....  `.+X JMMMM  JMMMM    .MMMM%
 *   JMMM#     .MMMM@  dMMM#   ,MHHWWXwOzz+++....?df MMMMF .MMMMF    JMMM#
 *  .MMMMNNNNNMMMMMD   MMMMMNNm 4MHHWWXXwOOzzz1+1wX'.MMMM! .MMMM`   .MMMM$
 *  .MMMMMMMMMMMM"`    .YMMMMMF  TMHHHWWWXXXwwwwXK! MMMMF  MMMMF    JMMMM
 *  MMMMF                          TMMHHHHHWWWHY^
 * .MMMM'                             `7""""^`
 * dMMM#
 * </pre></code>
 * <p/>
 * $HeadURL$<br>
 * $LastChangedBy$<br>
 * $Revision$<br>
 * $Date$<br>
 */
public class EmailValidatorTest {


	EmailValidator emailValidator;

	/**
	 * Here we set up the testscenario.
	 */
	@BeforeClass
	public void init(){
		emailValidator = new EmailValidator();
	}


	/**
	 * Here we call the method with a valid email adress.<br/>
	 * We expect no Exception.
	 */
	@Test
	public void validate0(){
		FacesContext fc = new FacesContextMock();
		fc.getApplication().setMessageBundle("no");
		UIComponent component = new HtmlInputText();
		boolean b = true;
		try {
			emailValidator.validate(fc, component, "reiz@ploin");
		} catch (ValidatorException e) {
			e.printStackTrace();
			b = false;
		}
		assertFalse(b);
	}

	/**
	 * Here we call the method with a valid email adress.<br/>
	 * We expect no Exception.
	 */
	@Test
	public void validate1(){
		FacesContext fc = new FacesContextMock();
		UIComponent component = new HtmlInputText();
		boolean b = true;
		try {
			emailValidator.validate(fc, component, "reiz@ploin.de");
		} catch (ValidatorException e) {
			e.printStackTrace();
			b = false;
		}
		assert b;
	}

	/**
	 * Here we call the method with a not valid adress.<br/>
	 * We expect a ValidatorException.
	 */
	@Test(expectedExceptions = {ValidatorException.class})
	public void validate2(){
		FacesContext fc = new FacesContextMock();
		UIComponent component = new HtmlInputText();
		emailValidator.validate(fc, component, "reiz@ploin.deeeee");				
	}

	

}
