<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite">
    <groups>
    </groups>
    <test name="Command line test">
      <class name="org.ploin.web.validator.PlzValidatorTest">
        <test-method status="PASS" signature="validate3()" name="validate3" duration-ms="16" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate1()" name="validate1" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate5()" name="validate5" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate6()" name="validate6" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate4()" name="validate4" duration-ms="8" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate0()" name="validate0" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate2()" name="validate2" duration-ms="7" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
          <exception class="javax.faces.validator.ValidatorException">
            <message>
              <![CDATA[Validationerror. Please type in a valid PLZ!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.faces.validator.ValidatorException: Validationerror. Please type in a valid PLZ!
	at org.ploin.web.faces.validator.PlzValidator.validate(PlzValidator.java:63)
	at org.ploin.web.validator.PlzValidatorTest.validate2(PlzValidatorTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:607)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:956)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:60)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:153)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.stack.StackTest">
        <test-method status="PASS" signature="stackTest()" name="stackTest" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.BlockSavePhaseListenerTest">
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener03Test">
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="2" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener03Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.flow.FlowControlTest">
        <test-method status="PASS" signature="leaveFlowAction1()" name="leaveFlowAction1" duration-ms="4" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.readFlows1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows5()" name="isViewsInSubflows5" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows4" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getFlowById1()" name="getFlowById1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows7" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewNotInSet4()" name="isViewNotInSet4" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewNotInSet3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows4()" name="isViewsInSubflows4" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInFlowPathPeek3()" name="isViewInFlowPathPeek3" duration-ms="1" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInFlowPathPeek2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInSet3()" name="isViewInSet3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInSet2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInFlowPathPeek1()" name="isViewInFlowPathPeek1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.getFlowById5" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewNotInSet1()" name="isViewNotInSet1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInSet3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewNotInSet3()" name="isViewNotInSet3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewNotInSet2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInSet1()" name="isViewInSet1" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows7()" name="isViewsInSubflows7" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows6" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getFlowById3()" name="getFlowById3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.getFlowById2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getFlowById4()" name="getFlowById4" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.getFlowById3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows6()" name="isViewsInSubflows6" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows5" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getFlowById5()" name="getFlowById5" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.getFlowById4" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="readFlows1()" name="readFlows1" duration-ms="7" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInFlowPathPeek5" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows2()" name="isViewsInSubflows2" duration-ms="1" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInSet2()" name="isViewInSet2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInSet1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInFlowPathPeek4()" name="isViewInFlowPathPeek4" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInFlowPathPeek3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows3()" name="isViewsInSubflows3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewsInSubflows2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInFlowPathPeek2()" name="isViewInFlowPathPeek2" duration-ms="1" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInFlowPathPeek1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewInFlowPathPeek5()" name="isViewInFlowPathPeek5" duration-ms="1" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewInFlowPathPeek4" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewNotInSet2()" name="isViewNotInSet2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewNotInSet1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getFlowById2()" name="getFlowById2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.getFlowById1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="isViewsInSubflows()" name="isViewsInSubflows" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowControlTest.isViewNotInSet4" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener02Test">
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase2()" name="beforePhase2" duration-ms="169" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener02Test.beforePhase1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener02Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.validator.EmailValidatorTest">
        <test-method status="PASS" signature="validate0()" name="validate0" duration-ms="4" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate2()" name="validate2" duration-ms="28" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
          <exception class="javax.faces.validator.ValidatorException">
            <message>
              <![CDATA[Validationerror. Please type in a valid e-mail-adress!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.faces.validator.ValidatorException: Validationerror. Please type in a valid e-mail-adress!
	at org.ploin.web.faces.validator.EmailValidator.validate(EmailValidator.java:61)
	at org.ploin.web.validator.EmailValidatorTest.validate2(EmailValidatorTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:607)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:956)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:60)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:153)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate1()" name="validate1" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.flow.FlowTest">
        <test-method status="PASS" signature="getterAndSetterForFlowId()" name="getterAndSetterForFlowId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForDisableUrlNavigation()" name="getterAndSetterForDisableUrlNavigation" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addExcludeAuthoritys()" name="addExcludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForExcludeAuthoritys" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="containExcludeAuthoritys()" name="containExcludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.addExcludeAuthoritys" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAccessDeniedPage()" name="getterAndSetterForAccessDeniedPage" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="5" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForExcludeAuthoritys()" name="getterAndSetterForExcludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAfterFlowAction()" name="getterAndSetterForAfterFlowAction" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAttributes()" name="getterAndSetterForAttributes" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAuthoritySource()" name="getterAndSetterForAuthoritySource" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkHashCode1()" name="checkHashCode1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals8" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals2()" name="checkEquals2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForBeforeLifecycleAction()" name="getterAndSetterForBeforeLifecycleAction" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals4()" name="checkEquals4" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals3" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals6()" name="checkEquals6" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals5" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals8()" name="checkEquals8" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals7" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addViews()" name="addViews" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForViews" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAppName()" name="getterAndSetterForAppName" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals7()" name="checkEquals7" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals6" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addIncludeAuthoritys()" name="addIncludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForIncludeAuthoritys" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="containAttribute()" name="containAttribute" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.addAttribute" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForSubFlows()" name="getterAndSetterForSubFlows" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForBeforeFlowAction()" name="getterAndSetterForBeforeFlowAction" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addSubFlows()" name="addSubFlows" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForSubFlows" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addIgnoreViews()" name="addIgnoreViews" duration-ms="1" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForIgnoreViews" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForIncludeAuthoritys()" name="getterAndSetterForIncludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="addAttribute()" name="addAttribute" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.getterAndSetterForAttributes" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkHashCode2()" name="checkHashCode2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkHashCode1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals3()" name="checkEquals3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="containIncludeAuthoritys()" name="containIncludeAuthoritys" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.addIncludeAuthoritys" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals1()" name="checkEquals1" duration-ms="3" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkHashCode3()" name="checkHashCode3" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkHashCode2" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForViews()" name="getterAndSetterForViews" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForAfterLifecycleAction()" name="getterAndSetterForAfterLifecycleAction" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="viewContains()" name="viewContains" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.addViews" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEquals5()" name="checkEquals5" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.flow.FlowTest.checkEquals4" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetterForIgnoreViews()" name="getterAndSetterForIgnoreViews" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener04Test">
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener04Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="41" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="70" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.validator.HtmlKickerTest">
        <test-method status="PASS" signature="validate1()" name="validate1" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate2()" name="validate2" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
          <exception class="javax.faces.validator.ValidatorException">
            <message>
              <![CDATA[Validationerror. Please dont`t type in HTML-Tags or special signs like (&).]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.faces.validator.ValidatorException: Validationerror. Please dont`t type in HTML-Tags or special signs like (&).
	at org.ploin.web.faces.validator.HtmlKicker.validate(HtmlKicker.java:62)
	at org.ploin.web.validator.HtmlKickerTest.validate2(HtmlKickerTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:607)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:956)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:60)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:153)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="validate0()" name="validate0" duration-ms="12" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.validator.NumberOnlyValidatorTest">
        <test-method status="PASS" signature="validate4()" name="validate4" duration-ms="4" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate2()" name="validate2" duration-ms="2" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
          <exception class="javax.faces.validator.ValidatorException">
            <message>
              <![CDATA[Validationerror. Please type in a just numbers!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.faces.validator.ValidatorException: Validationerror. Please type in a just numbers!
	at org.ploin.web.faces.validator.NumberOnlyValidator.validate(NumberOnlyValidator.java:65)
	at org.ploin.web.validator.NumberOnlyValidatorTest.validate2(NumberOnlyValidatorTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:607)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:956)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:60)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:153)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="validate1()" name="validate1" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate5()" name="validate5" duration-ms="5" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate3()" name="validate3" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate0()" name="validate0" duration-ms="5" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="28" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="validate6()" name="validate6" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener06Test">
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="5" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener06Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase2()" name="beforePhase2" duration-ms="4" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener06Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener05Test">
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener05Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
      <class name="org.ploin.web.phaselistener.JsfPhaseListener01Test">
        <test-method status="PASS" signature="beforePhase1()" name="beforePhase1" duration-ms="6" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener01Test.getterAndSetter" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="generateId()" name="generateId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getPhaseId()" name="getPhaseId" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="beforePhase2()" name="beforePhase2" duration-ms="0" started-at="2012-04-01T11:55:47Z" depends-on-methods="org.ploin.web.phaselistener.JsfPhaseListener01Test.beforePhase1" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="before()" name="before" is-config="true" duration-ms="1" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="afterPhase()" name="afterPhase" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
        <test-method status="PASS" signature="getterAndSetter()" name="getterAndSetter" duration-ms="0" started-at="2012-04-01T11:55:47Z" finished-at="2012-04-01T11:55:47Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
